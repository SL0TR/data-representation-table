{"version":3,"sources":["static/data-table.svg","components/NavBar/index.jsx","components/Footer/index.jsx","components/Pagination/index.jsx","util/trimString.js","util/fetchData.js","components/SideBar/index.jsx","components/Table/index.jsx","App.jsx","registerServiceWorker.js","index.jsx"],"names":["module","exports","__webpack_require__","p","NavBar","react_default","a","createElement","className","src","dataTableIcon","alt","Footer","href","Pagination","_ref","pagesCount","pageSize","currentPage","onPageChange","allPages","Array","from","_","x","_useState","useState","filter","page","_useState2","Object","slicedToArray","pages","setPages","onClick","num","console","log","keys","el","slice","prevPage","map","key","length","TrimString","str","len","arguments","undefined","sLen","window","screen","width","concat","fetchApiData","queryOne","queryTwo","axios","get","SideBar","sideBar","item","onSideBarClose","id","title","url","thumbnailUrl","Table","photos","setPhotos","_useState3","_useState4","itemPerRequest","setItemPerRequest","_useState5","_useState6","setPagesCount","_useState7","_useState8","setCurrentPage","_useState9","_useState11","_useState12","sortPath","setSortPath","_useState13","_useState14","sortOrder","setSortOrder","_useState15","_useState16","setSideBar","_useState17","_useState18","activeItem","setActiveItem","inputEl","useRef","useEffect","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","_ref$data","wrap","_context","prev","next","sent","data","stop","apply","this","fetchData","newPhotos","orderBy","handleSort","path","order","handelePageChange","_ref2","_callee2","_ref3","_context2","_x","handleSortClassName","column","handlItemPerPageChange","_ref4","_callee3","e","_ref5","_ref5$data","_context3","preventDefault","current","value","_x2","placeholder","ref","type","data-th","components_Pagination","components_SideBar","App","components_Table","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e4006cee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/data-table.b197ad99.svg\";","import React from \"react\";\r\nimport dataTableIcon from '../../static/data-table.svg';\r\nimport './navbar.css';\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <img className=\"navbar--logo\" src={dataTableIcon} alt=\"data table icon\"/> \r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport './footer..css';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p>Built with love by <a href=\"https://github.com/SL0TR\">Mohaimin Islam</a></p>\r\n    </footer>\r\n  );\r\n}\r\n","import React, { useState }from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './pagination.css';\r\n\r\nconst Pagination = ({ pagesCount, pageSize, currentPage, onPageChange }) => {\r\n  const allPages = Array.from(Array(pagesCount), (_,x) => x+1);\r\n  const [pages, setPages] = useState(allPages.filter(page => page <= 10))\r\n  \r\n  const nextPage = num => {\r\n    setPages(pages.map(el => el + num).filter(el => el <= pagesCount));\r\n    console.log(pages);\r\n    onPageChange(pages[0] + num)\r\n  }\r\n\r\n  const prevPage = num => {\r\n    console.log(pages[0])\r\n    const allPages = Array.from(Array(pagesCount).keys()).filter( el => el <= pages[0]).slice((pages[0] -10), pages[0])\r\n    console.log(allPages, pagesCount)\r\n    setPages(allPages);\r\n    console.log(pages)\r\n    onPageChange(pages[0] - num)\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <ul>\r\n        {  currentPage > pageSize && (\r\n          <li><a href onClick={() => prevPage(10)}>Prev</a></li>\r\n        ) }\r\n        { pages.map(page => (\r\n            <li key={page} className={currentPage === page ? 'active': null }>\r\n              <a href onClick={() => onPageChange(page)}>{page}</a>\r\n            </li>\r\n        ))}\r\n\r\n        { (pages[pages.length - 1]  ) < allPages.length && (\r\n          <li><a href onClick={() => nextPage(10)}>Next</a></li>\r\n        ) }\r\n        \r\n      </ul>\r\n  </div>\r\n  );\r\n}\r\n\r\nPagination.propTypes = {\r\n  pagesCount: propTypes.number.isRequired,\r\n  pageSize: propTypes.number.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n}\r\n\r\n\r\nexport default Pagination;","const TrimString = (str, len = 50, sLen = 25) => {\r\n  if(window.screen.width > 1100 && str.length > len) {\r\n   return `${str.slice(0, len)}...`\r\n  } else if(window.screen.width < 600 && str.length > sLen ) {\r\n    console.log(str.len)\r\n    return `${str.slice(0, sLen)}...`\r\n  } else {\r\n    return str;\r\n  }\r\n}\r\n \r\nexport default TrimString;","import axios from 'axios';\r\nconst fetchApiData = (queryOne, queryTwo = 10) => axios.get(`/api/photos?page=${queryOne}&perPage=${queryTwo}`);\r\n\r\nexport default fetchApiData;","import React from 'react';\r\nimport './sidebar.css';\r\n\r\nconst SideBar = ({ sideBar, item, onSideBarClose }) => {\r\n\r\n  return ( \r\n    <div className={ sideBar ? 'sidebar open' : 'sidebar'}>\r\n      { item && (\r\n        <div className=\"photo\">\r\n          <p className=\"id\">{item.id}</p>\r\n          <p className=\"title\">{item.title}</p>\r\n          <img src={item.url} alt=\"Test\"/>\r\n          <p className=\"details\">{item.thumbnailUrl}</p>\r\n        </div>\r\n      ) }\r\n      <button className=\"close-btn\" onClick={onSideBarClose}>X</button>\r\n      \r\n    </div>\r\n  );\r\n}\r\n \r\nexport default SideBar;","import React, { useState, useEffect, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport './table.css';\r\nimport Pagination from '../Pagination';\r\nimport TrimString from '../../util/trimString';\r\nimport fetchApiData from '../../util/fetchData';\r\nimport SideBar from '../SideBar';\r\nconst Table = () => {\r\n  \r\n  const [photos, setPhotos] = useState(null);\r\n  const [itemPerRequest, setItemPerRequest] = useState(10);\r\n  const [pagesCount, setPagesCount] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize] = useState(10);\r\n  const [sortPath, setSortPath] = useState('id');\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [sideBar, setSideBar] = useState(false);\r\n  const [activeItem, setActiveItem] = useState(null);\r\n  const inputEl = useRef(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      \r\n      // const cachedPhotos = JSON.parse(localStorage.getItem('cachedPhotos'));\r\n      // const cachedPagesCount = parseInt(localStorage.getItem('cachedPagesCount'));\r\n      \r\n      // setPhotos(cachedPhotos)\r\n      // setPagesCount(cachedPagesCount);\r\n      // console.log(photos, 'loaded from cache')\r\n\r\n      // if(!cachedPhotos || !cachedPagesCount) {\r\n        // if(!photos && ) {\r\n          const { data: { photos, pagesCount } } = await fetchApiData(currentPage, itemPerRequest);\r\n          setPhotos(photos)\r\n          setPagesCount(pagesCount);\r\n          // localStorage.setItem('cachedPhotos', JSON.stringify(photos));\r\n          // localStorage.setItem('cachedPagesCount', pagesCount);\r\n          console.log({photos, pagesCount}, \"initial load\")\r\n        // }\r\n\r\n      // }\r\n    }\r\n    fetchData();\r\n\r\n  }, [pagesCount, itemPerRequest]);\r\n\r\n  useEffect(() => {\r\n    const newPhotos = _.orderBy(photos, [sortPath], [sortOrder])\r\n    setPhotos(newPhotos);\r\n    \r\n  }, [sortPath, sortOrder, currentPage ]);\r\n\r\n  const handleSort = path => {\r\n    let order = 'asc'\r\n    if( sortPath === path ) {\r\n      order = sortOrder === 'asc' ? 'desc' : 'asc';\r\n    }\r\n    setSortPath(path)\r\n    setSortOrder(order)\r\n  }\r\n\r\n  const handelePageChange = async page => {\r\n    const { data: { photos } } = await fetchApiData(page, itemPerRequest);\r\n    setPhotos(photos)\r\n    setCurrentPage(page);\r\n  }\r\n\r\n  const handleSortClassName = column => {\r\n    if ( column !== sortPath ) return\r\n    if(sortOrder === 'asc') return 'sorted asc'\r\n    return 'sorted desc'\r\n  }\r\n\r\n  const handlItemPerPageChange = async e => {\r\n    e.preventDefault();\r\n    setItemPerRequest(inputEl.current.value)\r\n    const { data: { photos, pagesCount } } = await fetchApiData(1, itemPerRequest);\r\n    setPhotos(photos)\r\n    setPagesCount(pagesCount);\r\n    setCurrentPage(1);\r\n  }\r\n\r\n  const handleRowDetails = item => {\r\n    console.log(item)\r\n    setActiveItem(item);\r\n    setSideBar(true);\r\n  }\r\n\r\n  const handleSideBarClose = () => {\r\n    setSideBar(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Table Representation of API data.</h1>\r\n      <div className=\"photo-perpage\">\r\n        <input placeholder=\"Enter the number of items per page. 10 is default\" ref={inputEl} type=\"text\"/>\r\n        <button onClick={handlItemPerPageChange}>Submit</button>\r\n      </div>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th className={ handleSortClassName('id') } onClick={() => handleSort('id')}>ID</th>\r\n            <th className={ handleSortClassName('title') } onClick={() => handleSort('title')}>Title</th>\r\n            <th className={ handleSortClassName('url') } onClick={() => handleSort('url')}>URL</th>\r\n          </tr>\r\n          { !photos && (\r\n            <p>Loading..</p>\r\n          )}\r\n          { photos && photos.map(el => (\r\n            <tr key={el.id} onClick={ () => handleRowDetails(el) }>\r\n              <td data-th=\"ID\">{ el.id }</td>\r\n              <td data-th=\"Title\">{TrimString(el.title, 60, 25) }</td>\r\n              <td data-th=\"URL\">{TrimString(el.url, 60, 25) }</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <Pagination pagesCount={pagesCount || 10} pageSize={pageSize} onPageChange={handelePageChange} currentPage={currentPage}/>\r\n      <SideBar sideBar={sideBar}  onSideBarClose={handleSideBarClose} item={activeItem} />\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Table\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport Table from \"./components/Table\";\r\n//TODO Web Template Studio: Add routes for your new pages here.\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <NavBar />\r\n        <Table />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport './App.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById(\"root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}